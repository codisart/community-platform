{"version":3,"file":"UsefulStatsButton-28422cac.js","sources":["../../src/UsefulStatsButton/UsefulStatsButton.tsx"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useTheme } from '@emotion/react'\nimport { Text } from 'theme-ui'\n\nimport { Button } from '../Button/Button'\nimport { Tooltip } from '../Tooltip/Tooltip'\n\nimport type { ThemeUIStyleObject } from 'theme-ui'\n\nexport interface IProps {\n  hasUserVotedUseful: boolean\n  votedUsefulCount: number | undefined\n  isLoggedIn: boolean\n  onUsefulClick: () => void\n  sx?: ThemeUIStyleObject\n  disabled?: boolean\n}\n\nexport const UsefulStatsButton = (props: IProps) => {\n  const theme: any = useTheme()\n  const navigate = useNavigate()\n\n  const [votedUsefulCount, setVotedUsefulCount] = useState<number>()\n  const [hasUserVotedUseful, setHasUserVotedUseful] = useState<boolean>()\n  const [disabled, setDisabled] = useState<boolean>()\n\n  useEffect(\n    () => setHasUserVotedUseful(props.hasUserVotedUseful),\n    [props.hasUserVotedUseful],\n  )\n  useEffect(\n    () => setVotedUsefulCount(props.votedUsefulCount || 0),\n    [props.votedUsefulCount],\n  )\n  useEffect(() => setDisabled(props.disabled), [props.disabled])\n\n  const handleUsefulClick = () => {\n    setDisabled(true)\n    props.onUsefulClick()\n    setDisabled(false)\n  }\n\n  return (\n    <>\n      <Button\n        data-tip={props.isLoggedIn ? '' : 'Login to add your vote'}\n        data-cy={props.isLoggedIn ? 'vote-useful' : 'vote-useful-redirect'}\n        onClick={() =>\n          props.isLoggedIn ? handleUsefulClick() : navigate('/sign-in')\n        }\n        disabled={disabled}\n        sx={{\n          fontSize: 2,\n          backgroundColor: theme.colors.white,\n          py: 0,\n          '&:hover': {\n            backgroundColor: theme.colors.softblue,\n          },\n          ...props.sx,\n        }}\n        icon={hasUserVotedUseful ? 'star' : 'star-active'}\n      >\n        <Text\n          pr={2}\n          py={2}\n          sx={{\n            display: 'inline-block',\n          }}\n        >\n          {votedUsefulCount}\n        </Text>\n        <Text\n          pl={2}\n          py={2}\n          sx={{\n            display: 'inline-block',\n            borderLeft: `1px solid ${theme.colors.black}`,\n          }}\n        >\n          {hasUserVotedUseful ? 'Marked as useful' : 'Mark as useful'}\n        </Text>\n      </Button>\n      <Tooltip />\n    </>\n  )\n}\n"],"names":["UsefulStatsButton","props","theme","useTheme","navigate","useNavigate","votedUsefulCount","setVotedUsefulCount","useState","hasUserVotedUseful","setHasUserVotedUseful","disabled","setDisabled","useEffect","handleUsefulClick","jsxs","Fragment","Button","jsx","Text","Tooltip"],"mappings":"2VAmBO,MAAAA,EAAAC,GAAA,CACL,MAAAC,EAAAC,IACAC,EAAAC,IAEA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EACA,CAAAC,EAAAC,CAAA,EAAAF,EAAA,SAAA,EACA,CAAAG,EAAAC,CAAA,EAAAJ,EAAA,SAAA,EAEAK,EAAA,UAAA,IAAAH,EAAAT,EAAA,kBAAA,EACsD,CAAAA,EAAA,kBAAA,CAC3B,EAE3BY,EAAA,UAAA,IAAAN,EAAAN,EAAA,kBAAA,CAAA,EACuD,CAAAA,EAAA,gBAAA,CAC9B,EAEzBY,YAAA,IAAAD,EAAAX,EAAA,QAAA,EAAA,CAAAA,EAAA,QAAA,CAAA,EAEA,MAAAa,EAAA,IAAA,CACEF,EAAA,EAAA,EACAX,EAAA,cAAA,EACAW,EAAA,EAAA,CAAiB,EAGnB,OAAAG,EAAAC,EAAA,CAAA,SAAA,CAEID,EAAAE,EAAC,CAAA,WAAAhB,EAAA,WAAA,GAAA,yBACmC,UAAAA,EAAA,WAAA,cAAA,uBACU,QAAA,IAAAA,EAAA,WAAAa,EAAA,EAAAV,EAAA,UAAA,EAEkB,SAAAO,EAE9D,GAAA,CACI,SAAA,EACQ,gBAAAT,EAAA,OAAA,MACoB,GAAA,EAC1B,UAAA,CACO,gBAAAA,EAAA,OAAA,QACqB,EAChC,GAAAD,EAAA,EACS,EACX,KAAAQ,EAAA,OAAA,cACoC,SAAA,CAEpCS,EAAAC,EAAC,CAAA,GAAA,EACK,GAAA,EACA,GAAA,CACA,QAAA,cACO,EACX,SAAAb,CAEC,CAAA,EACHY,EACAC,EAAC,CAAA,GAAA,EACK,GAAA,EACA,GAAA,CACA,QAAA,eACO,WAAA,aAAAjB,EAAA,OAAA,OAC6B,EACxC,SAAAO,EAAA,mBAAA,gBAE2C,CAAA,CAC7C,CAAA,CAAA,EACFS,EAAAE,EAAA,EAAA,CACS,CAAA,CAAA,CAGf"}