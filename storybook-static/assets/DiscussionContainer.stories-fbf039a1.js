import{a as t}from"./jsx-runtime-913be41c.js";import{r as u}from"./index-2506bfc3.js";import{c as a}from"./utils-0ff7b291.js";import{D as e}from"./DiscussionContainer-6c7e2d5b.js";import"./index-a7768622.js";import"./CommentList-63ca625d.js";import"./Button-9ac859c2.js";import"./Icon-5a6c8159.js";import"./theme-ui-core-jsx-runtime.esm-9bc3c749.js";import"./emotion-element-6a883da9.browser.esm-becb4ad2.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-11801e73.js";import"./hoist-non-react-statics.cjs-dd442a32.js";import"./theme-ui-css.esm-a1197288.js";import"./emotion-styled.browser.esm-935c8bd8.js";import"./supporter-29075ee8.js";import"./icon-arrow-down-33f070d5.js";import"./icon-star-active-309631d9.js";import"./theme-ui-components.esm-784287e5.js";import"./emotion-react.browser.esm-ac7fc07b.js";import"./ButtonShowReplies-06ccecfb.js";import"./CommentItem-0a9192d5.js";import"./ConfirmModal-2cddc2ed.js";import"./Modal-edae582c.js";import"./index-0dfb046a.js";import"./index-4d501b15.js";import"./EditComment-aca9d368.js";import"./objectWithoutPropertiesLoose-4f48578a.js";import"./FieldTextarea-e3037ee5.js";import"./CharacterCount-ef389ffa.js";import"./LinkifyText-35502f20.js";import"./ExternalLink-299075d0.js";import"./InternalLink-53f45de4.js";import"./index-54304c9c.js";import"./index-150eb7c2.js";import"./Username-8771a1c3.js";import"./CreateReply-fc26531f.js";import"./CreateComment-ddd005ff.js";import"./MemberBadge-a0c54109.js";import"./DiscussionTitle-b470b4e1.js";const Ce={title:"Components/DiscussionContainer",component:e},I=a(3),q=a(15),m={render:()=>t(e,{comment:"",comments:I,handleDelete:()=>Promise.resolve(),handleEditRequest:()=>Promise.resolve(),handleEdit:()=>Promise.resolve(),maxLength:1e3,onChange:()=>null,onMoreComments:()=>null,onSubmit:()=>null,onSubmitReply:()=>Promise.resolve(),isLoggedIn:!1})},r={render:()=>t(e,{comments:[],handleDelete:()=>Promise.resolve(),handleEditRequest:()=>Promise.resolve(),handleEdit:()=>Promise.resolve(),maxLength:1e3,comment:"",onChange:()=>null,onMoreComments:()=>null,onSubmit:()=>null,onSubmitReply:()=>Promise.resolve(),isLoggedIn:!1})},s={render:()=>{const[o,n]=u.useState("");return t(e,{comments:I,handleDelete:()=>Promise.resolve(),handleEditRequest:()=>Promise.resolve(),handleEdit:()=>Promise.resolve(),maxLength:1e3,comment:o,onChange:n,onMoreComments:()=>null,onSubmit:()=>null,onSubmitReply:()=>Promise.resolve(),isLoggedIn:!0})}},i={render:()=>{const[o,n]=u.useState("");return t(e,{comments:q,handleDelete:()=>Promise.resolve(),handleEditRequest:()=>Promise.resolve(),handleEdit:()=>Promise.resolve(),maxLength:1e3,comment:o,onChange:n,onMoreComments:()=>null,onSubmit:()=>null,onSubmitReply:()=>Promise.resolve(),isLoggedIn:!0})}},l={render:()=>{const[o,n]=u.useState(""),d=a(3);return d[0].replies=a(2),t(e,{supportReplies:!0,comments:d,handleDelete:()=>Promise.resolve(),handleEditRequest:()=>Promise.resolve(),handleEdit:()=>Promise.resolve(),maxLength:1e3,comment:o,onChange:n,onMoreComments:()=>null,onSubmit:()=>null,isLoggedIn:!0,onSubmitReply:async(y,k)=>alert(`reply to commentId: ${y} with comment: ${k}`)})}};var c,p,h;m.parameters={...m.parameters,docs:{...(c=m.parameters)==null?void 0:c.docs,source:{originalSource:`{
  render: () => {
    return <DiscussionContainer comment={''} comments={fakeComments} handleDelete={() => Promise.resolve()} handleEditRequest={() => Promise.resolve()} handleEdit={() => Promise.resolve()} maxLength={1000} onChange={() => null} onMoreComments={() => null} onSubmit={() => null} onSubmitReply={() => Promise.resolve()} isLoggedIn={false} />;
  }
}`,...(h=(p=m.parameters)==null?void 0:p.docs)==null?void 0:h.source}}};var g,C,v;r.parameters={...r.parameters,docs:{...(g=r.parameters)==null?void 0:g.docs,source:{originalSource:`{
  render: () => {
    return <DiscussionContainer comments={[]} handleDelete={() => Promise.resolve()} handleEditRequest={() => Promise.resolve()} handleEdit={() => Promise.resolve()} maxLength={1000} comment={''} onChange={() => null} onMoreComments={() => null} onSubmit={() => null} onSubmitReply={() => Promise.resolve()} isLoggedIn={false} />;
  }
}`,...(v=(C=r.parameters)==null?void 0:C.docs)==null?void 0:v.source}}};var P,S,b;s.parameters={...s.parameters,docs:{...(P=s.parameters)==null?void 0:P.docs,source:{originalSource:`{
  render: () => {
    const [comment, setComment] = useState<string>('');
    return <DiscussionContainer comments={fakeComments} handleDelete={() => Promise.resolve()} handleEditRequest={() => Promise.resolve()} handleEdit={() => Promise.resolve()} maxLength={1000} comment={comment} onChange={setComment} onMoreComments={() => null} onSubmit={() => null} onSubmitReply={() => Promise.resolve()} isLoggedIn={true} />;
  }
}`,...(b=(S=s.parameters)==null?void 0:S.docs)==null?void 0:b.source}}};var E,R,L;i.parameters={...i.parameters,docs:{...(E=i.parameters)==null?void 0:E.docs,source:{originalSource:`{
  render: () => {
    const [comment, setComment] = useState<string>('');
    return <DiscussionContainer comments={expandableFakeComments} handleDelete={() => Promise.resolve()} handleEditRequest={() => Promise.resolve()} handleEdit={() => Promise.resolve()} maxLength={1000} comment={comment} onChange={setComment} onMoreComments={() => null} onSubmit={() => null} onSubmitReply={() => Promise.resolve()} isLoggedIn={true} />;
  }
}`,...(L=(R=i.parameters)==null?void 0:R.docs)==null?void 0:L.source}}};var D,f,x;l.parameters={...l.parameters,docs:{...(D=l.parameters)==null?void 0:D.docs,source:{originalSource:`{
  render: () => {
    const [comment, setComment] = useState<string>('');
    const fakeComments = createFakeComments(3);
    fakeComments[0].replies = createFakeComments(2);
    return <DiscussionContainer supportReplies={true} comments={fakeComments} handleDelete={() => Promise.resolve()} handleEditRequest={() => Promise.resolve()} handleEdit={() => Promise.resolve()} maxLength={1000} comment={comment} onChange={setComment} onMoreComments={() => null} onSubmit={() => null} isLoggedIn={true} onSubmitReply={async (commentId, comment) => alert(\`reply to commentId: \${commentId} with comment: \${comment}\`)} />;
  }
}`,...(x=(f=l.parameters)==null?void 0:f.docs)==null?void 0:x.source}}};const ve=["Default","NoComments","LoggedIn","Expandable","WithReplies"];export{m as Default,i as Expandable,s as LoggedIn,r as NoComments,l as WithReplies,ve as __namedExportsOrder,Ce as default};
//# sourceMappingURL=DiscussionContainer.stories-fbf039a1.js.map
